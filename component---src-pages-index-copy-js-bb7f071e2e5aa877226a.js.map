{"version":3,"sources":["webpack:///./src/pages/index copy.js"],"names":["data","allMarkdownRemark","edges","map","node","key","id","to","fields","slug","Math","abs","round","Date","frontmatter","update","getTime","days","date","fluid","featuredImage","childImageSharp","category","title","subtitle","excerpt"],"mappings":"4FAAA,yFAWe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGA,EAAKC,kBAAkBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,IACd,kBAAC,IAAD,CAAMC,GAAIH,EAAKI,OAAOC,MACpB,kBAAC,IAAD,KACEC,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAVjFC,UAU0G,GACvGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MAC3C,kBAAC,IAAD,eAEFR,KAAKC,IAAID,KAAKE,OAAO,IAAIC,KAAKT,EAAKU,YAAYC,QAAQC,WAAY,IAAIH,MAAOG,WAdjFC,UAc0G,GACxGb,EAAKU,YAAYC,SAAWX,EAAKU,YAAYI,MAC5C,kBAAC,IAAD,kBAEA,kBAAC,IAAD,CACEC,MAAOf,EAAKU,YAAYM,cAAcC,gBAAgBF,QAExD,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAWf,EAAKU,YAAYQ,UAC5B,kBAAC,IAAD,KAAQlB,EAAKU,YAAYS,OAC1B,kBAAC,IAAD,KAAWnB,EAAKU,YAAYU,UAC3B,kBAAC,IAAD,KAAUpB,EAAKqB","file":"component---src-pages-index-copy-js-bb7f071e2e5aa877226a.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Img from \"gatsby-image\";\nimport { SinglePost, PostInfo, PreTitle, Title, Subtitle, Update, Freshnew, Excrept, Card, CardColumns }  from \"../components/style/emo-home-posts\";\n\nlet minutes = 1000 * 60;\nlet hours = minutes * 60;\nlet days = hours * 24;\nlet months = days * 30;\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <CardColumns>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <Card key={node.id}>\n            <Link to={node.fields.slug}>\n              <SinglePost>\n\t              {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n\t               node.frontmatter.update !== node.frontmatter.date &&(\n                  <Update>Update</Update>\n                )}\n\t              {Math.abs(Math.round((new Date(node.frontmatter.update).getTime() - new Date().getTime()) / months)) <= 1 &&\n\t              node.frontmatter.update === node.frontmatter.date &&(\n\t\t              <Freshnew>Fresh New</Freshnew>\n\t              )}\n                <Img\n                  fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\n                />\n                <PostInfo>\n                  <PreTitle>{node.frontmatter.category}</PreTitle>\n                  <Title>{node.frontmatter.title}</Title>\n\t                <Subtitle>{node.frontmatter.subtitle}</Subtitle>\n                  <Excrept>{node.excerpt}</Excrept>\n                </PostInfo>\n              </SinglePost>\n            </Link>\n          </Card>\n        ))}\n      </CardColumns>\n    </Layout>\n  );\n};\n\n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___update], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            update(formatString: \"DD MMMM, YYYY\")\n            title\n            subtitle\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 500, maxHeight: 500) {\n                  base64\n                  tracedSVG\n                  aspectRatio\n                  src\n                  srcSet\n                  srcWebp\n                  srcSetWebp\n                  sizes\n                  originalImg\n                  originalName\n                  presentationWidth\n                  presentationHeight\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}